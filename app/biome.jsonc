{
  "$schema": "https://biomejs.dev/schemas/2.0.0-beta.6/schema.json",
  "vcs": {
    "enabled": false,
    "clientKind": "git",
    "useIgnoreFile": false
  },
  "files": {
    "ignoreUnknown": false,
    "includes": ["**", "!**/src/generated/**", "!**/src/components/ui/**"]
  },
  "formatter": {
    "enabled": true,
    "indentStyle": "space",
    "lineWidth": 80,
    "indentWidth": 2
  },
  "assist": {
    "actions": {
      "source": {
        "organizeImports": {
          "level": "on",
          "options": {
            "groups": [
              { "type": false, "source": [":BUN:", ":NODE:"] },
              ":BLANK_LINE:",
              {
                "type": false,
                "source": [":PACKAGE:", ":PACKAGE_WITH_PROTOCOL:"]
              },
              ":BLANK_LINE:",
              { "type": false, "source": ["**"] },
              ":BLANK_LINE:",
              { "type": true }
            ]
          }
        }
      }
    }
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "a11y": {
        // NB: turned off to use `role` attribute to extend conditions such as `groupHover`
        "useSemanticElements": "off",
        "noStaticElementInteractions": "off"
      },
      "correctness": {
        "noUnusedImports": "error"
      },
      "nursery": {
        "useSortedClasses": {
          "level": "warn",
          "fix": "safe",
          "options": {
            "attributes": ["className"],
            "functions": ["cn"]
          }
        },
        "useUniqueElementIds": "off"
      },
      "style": {
        "noNonNullAssertion": "off",
        "useSingleVarDeclarator": "off",
        "noParameterAssign": "error",
        "useAsConstAssertion": "error",
        "useDefaultParameterLast": "error",
        "useEnumInitializers": "error",
        "useSelfClosingElements": "error",
        "noUnusedTemplateLiteral": "error",
        "useNumberNamespace": "error",
        "noInferrableTypes": "error",
        "noUselessElse": "error",
        "useImportType": {
          "level": "error",
          "options": { "style": "separatedType" }
        }
      },
      "suspicious": {
        // TODO: remove this, and make sure it is indeed an error. For scaffolding purposes, it is easier to just have this be a warning for now
        "noExplicitAny": "warn",
        "noConsole": {
          "level": "error",
          "options": { "allow": ["error", "log", "warn"] }
        }
      }
    }
  }
}
